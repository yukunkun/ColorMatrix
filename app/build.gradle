apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'
apply plugin: 'com.jakewharton.butterknife'


android {
    compileSdkVersion 27
    buildToolsVersion '27.0.0'
    def currentVersionCode = getVersionCode()
    def currentVersionName = getVersionName()

    defaultConfig {
        applicationId "com.matrix.yukun.matrix"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode currentVersionCode
        versionName currentVersionName
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        multiDexEnabled true
        flavorDimensions "versionCode"
        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        signConfig {
            keyAlias 'matrix'
            keyPassword '123456'
            storeFile file('../app/Matrix.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signConfig
            proguardFile '../app/Matrix.jks'
        }

        debug {
            signingConfig signingConfigs.signConfig
            minifyEnabled false
            proguardFile '../app/Matrix.jks'
        }
    }
    //多渠道打包
    productFlavors {
        xiaomi {}
        yinyongbao {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

//    // 签名
//    signingConfigs {
//        debug {
//            keyAlias 'matrix'
//            keyPassword '123456'
//            storePassword '123456'
//            storeFile file('../Matrix.jks')
//        }
//
//        release {
//            keyAlias 'matrix'
//            keyPassword '123456'
//            storePassword '123456'
//            storeFile file('../Matrix.jks')
//        }
//    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}
MobSDK {
    appKey "28c93db53e68e"
    appSecret "93992a55fb6f7a45a0a73ebadd5bc5ec"
    gui false
    ShareSDK {
        //平台配置信息
        devInfo {
            QQ {
                appId "1105962710"
                appKey "6Iw3OhfBgSDw8ef7"
                shareByAppClient true
            }
            QZone {
                appId "1105962710"
                appKey "6Iw3OhfBgSDw8ef7"
                shareByAppClient true
            }
        }
    }
}

/**
 * 版本号
 * @return
 */
def getVersionCode() {// 获取版本号
    def versionFile = file('version.properties')// 读取第一步新建的文件
    if (versionFile.canRead()) {// 判断文件读取异常
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['VERSION_CODE'].toInteger()// 读取文件里面的版本号
        def runTasks = gradle.startParameter.taskNames
        if ('assembleRelease' in runTasks) {//仅在assembleRelease任务是增加版本号,其他渠道包在此分别配置
            // 版本号自增之后再写入文件（此处是关键，版本号自增+1）
            versionProps['VERSION_CODE'] = (++versionCode).toString()
            versionProps.store(versionFile.newWriter(), null)
        }
        return versionCode // 返回自增之后的版本号
    } else {
        throw new GradleException("Could not find version.properties!")
    }
}

/**
 * 版本名字
 * @return
 */
def getVersionName() {
    def versionFile = file('version.properties')// 读取第一步新建的文件
    if (versionFile.canRead()) {// 判断文件读取异常
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = "2.8." + versionProps['VERSION_CODE'].toString() + "版"// 读取文件里面的版本号
        def runTasks = gradle.startParameter.taskNames
        if ('assembleRelease' in runTasks) {//仅在assembleRelease任务是增加版本号,其他渠道包在此分别配置
            // 版本号自增之后再写入文件（此处是关键，版本号自增+1）
//            versionProps['VERSION_CODE'] = (++versionCode).toString()
//            versionProps.store(versionFile.newWriter(), null)
        }
        return versionCode // 返回自增之后的版本号
    } else {
        throw new GradleException("Could not find version.properties!")
    }
}


dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    implementation 'jp.wasabeef:glide-transformations:3.0.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'org.greenrobot:eventbus:3.0.0'
    //bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    implementation 'com.github.castorflex.smoothprogressbar:library-circular:1.0.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
    implementation(name: 'GDTSDK.union.4.90.960', ext: 'aar')
    // rxjava的相关
    implementation 'io.reactivex:rxjava:1.2.1'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    implementation 'me.everything:overscroll-decor-android:1.0.4'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'com.haozhang.libary:android-slanted-textview:1.2'
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation 'com.github.rubensousa:floatingtoolbar:1.5.1'
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'
    implementation 'org.litepal.android:core:1.6.0'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.bigkoo:convenientbanner:2.0.5'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-21'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-21'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.jrummyapps:colorpicker:2.1.6'
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'joda-time:joda-time:2.9.4'
    implementation 'com.contrarywind:Android-PickerView:4.1.6'
    implementation 'top.zibin:Luban:1.1.8'
//    implementation 'jp.wasabeef:blurry:3.0.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.8'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation project(path: ':Photoeditor')
    implementation project(path: ':jiaozivideoplayer')

}
